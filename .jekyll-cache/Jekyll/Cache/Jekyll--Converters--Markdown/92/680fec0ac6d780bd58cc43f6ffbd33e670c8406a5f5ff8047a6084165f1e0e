I"+[
<figure class="highlight"><pre><code class="language-r" data-lang="r"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="w">    </span><span class="c1">## create territories list</span><span class="w">
    </span><span class="n">territories</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"AS"</span><span class="p">,</span><span class="w"> </span><span class="s2">"GU"</span><span class="p">,</span><span class="w"> </span><span class="s2">"MP"</span><span class="p">,</span><span class="w"> </span><span class="s2">"PR"</span><span class="p">,</span><span class="w"> </span><span class="s2">"VI"</span><span class="p">)</span><span class="w">

    </span><span class="c1">## load and process state park data</span><span class="w">
    </span><span class="n">state_parks</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_read</span><span class="p">(</span><span class="s2">"./shapefiles/original/state_parks_padus/PADUS3_0Geopackage.gpkg"</span><span class="p">,</span><span class="w"> </span><span class="n">layer</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"PADUS3_0Fee"</span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">filter</span><span class="p">(</span><span class="n">State_Nm</span><span class="w"> </span><span class="o">%!in%</span><span class="w"> </span><span class="n">territories</span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">filter</span><span class="p">(</span><span class="n">d_Own_Type</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State"</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Recreation Management Area"</span><span class="w"> </span><span class="o">|</span><span class="w"> 
           </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Historic or Cultural Area"</span><span class="w">  </span><span class="o">|</span><span class="w"> 
           </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Park"</span><span class="w"> </span><span class="o">|</span><span class="w"> 
           </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Wilderness"</span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">select</span><span class="p">(</span><span class="n">d_Des_Tp</span><span class="p">,</span><span class="w"> </span><span class="n">Unit_Nm</span><span class="p">,</span><span class="w"> </span><span class="n">State_Nm</span><span class="p">,</span><span class="w"> </span><span class="n">d_State_Nm</span><span class="p">,</span><span class="w"> </span><span class="n">GIS_Acres</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">mutate</span><span class="p">(</span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">case_when</span><span class="p">(</span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Recreation Management Area"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"State Preserve, Reserve, or Recreation Area"</span><span class="p">,</span><span class="w"> 
                            </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Historic or Cultural Area"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"Historical Park, Site, Monument, or Memorial"</span><span class="p">,</span><span class="w">
                            </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Park"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"State Park"</span><span class="p">,</span><span class="w">
                            </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Wilderness"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"State Wilderness"</span><span class="p">))</span><span class="w">   </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">mutate</span><span class="p">(</span><span class="n">visited</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">case_when</span><span class="p">(</span><span class="n">Unit_Nm</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Valley of Fire State Park"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"visited"</span><span class="p">,</span><span class="w">
                               </span><span class="kc">TRUE</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"not visited"</span><span class="p">))</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> 
      </span><span class="n">shift_geometry</span><span class="p">(</span><span class="n">preserve_area</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="c1"># resizes alaska to fit with the size of the other states</span><span class="w">
                    </span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"below"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># moves alaska so it's near hawaii</span><span class="w">
    </span><span class="n">sf</span><span class="o">::</span><span class="n">st_transform</span><span class="p">(</span><span class="s2">"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"</span><span class="p">)</span><span class="w"> </span><span class="c1"># changes the geographic data from NAD83 to WGS84 </span>
</pre></td></tr></tbody></table></code></pre></figure>

<ul>
  <li>line 2</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">2</span><span class="w">    </span><span class="n">territories</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"AS"</span><span class="p">,</span><span class="w"> </span><span class="s2">"GU"</span><span class="p">,</span><span class="w"> </span><span class="s2">"MP"</span><span class="p">,</span><span class="w"> </span><span class="s2">"PR"</span><span class="p">,</span><span class="w"> </span><span class="s2">"VI"</span><span class="p">)</span></code></pre></figure>

<p>Line 2 here is the same as it was when I processed the National Park data in <a href="http://localhost:4000/notes/cartography-part-two" target="_blank" rel="noopener noreferrer">part III</a>. It creates a list of the postal codes associated with the United States’ associated territories and lands. In line 6 we use it to filter these areas out of the data set because I am only interested in the 50 states.</p>

<center><i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i></center>

<ul>
  <li>line 5</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">5</span><span class="w">   </span><span class="n">state_parks</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_read</span><span class="p">(</span><span class="s2">"./shapefiles/original/state_parks_padus/PADUS3_0Geopackage.gpkg"</span><span class="p">,</span><span class="w"> </span><span class="n">layer</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"PADUS3_0Fee"</span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> </span></code></pre></figure>

<p>Line 5 is where we actually load the data into R. Before, when I used <code>st_layers()</code> I was only getting the layer information from the geopackage. Here, I use the <code>st_read()</code> function which takes two arguments.</p>

<p>The first argument is the path to the geopackage. Geopackage files contain a lot of information, so make sure you choose the file with the <code>.gpkg</code> extension.</p>

<p>The second argument <code>layer</code> tells R which layer from the geopackage to open. Here, I load the <em>Fee</em> layer because it has all the data I’m interested in.</p>

<p>The <code> %&gt;% </code> is part of the tidyverse and it tells R to continue processing the data on the next line.</p>

<center><i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i></center>

<ul>
  <li>line 6</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">6</span><span class="w">   </span><span class="n">filter</span><span class="p">(</span><span class="n">State_Nm</span><span class="w"> </span><span class="o">%!in%</span><span class="w"> </span><span class="n">territories</span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> </span></code></pre></figure>

<p>I went over the logic of this line when I did the <a href="http://localhost:4000/notes/cartography-part-three" target="_blank" rel="noopener noreferrer">National Park</a> data. You can read about it more in detail in Part III. All this line does is filter out the US’ associated islands and territories.</p>

<center><i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i></center>

<ul>
  <li>line 7-10</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">7</span><span class="w">    </span><span class="n">filter</span><span class="p">(</span><span class="n">d_Own_Type</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State"</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Recreation Management Area"</span><span class="w"> </span><span class="o">|</span><span class="w">
</span><span class="m">8</span><span class="w">           </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Historic or Cultural Area"</span><span class="w">  </span><span class="o">|</span><span class="w"> 
</span><span class="m">9</span><span class="w">           </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Park"</span><span class="w"> </span><span class="o">|</span><span class="w"> 
</span><span class="m">10</span><span class="w">          </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Wilderness"</span><span class="p">)</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> </span></code></pre></figure>

<p>The <code>filter</code> function in the tidyverse is very powerful. It can do complex operations by using certain operators. Here, I’m using it to filter for ownership type. The PAD-US data includes national parks, Native American land, and military installations. I didn’t want any of these areas on my map so I filtered for <code>"State"</code> ownership.</p>

<p>However, I didn’t want <em>just</em> state ownership because that also includes a lot of land areas that aren’t necessarily state parks - like watersheds or mineral areas. I use the <code>&amp;</code> operator to tell R I want land owned by the state <em>and</em> of a certain designation type.</p>

<p>The <code>d_Des_Type</code> column contains the land’s designation code. I am selecting for state ownership <em>and</em> a designation type of “Recreation Management Area” <em>or</em> <code>|</code> “State Historic or Cultural Area” <em>or</em> “State Park” <em>or</em> “State Wilderness” in lines 7-10.</p>

<p>This line will give me state owned land that is probably a state park.</p>

<center><i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i></center>

<ul>
  <li>line 11</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">11</span><span class="w">   </span><span class="n">select</span><span class="p">(</span><span class="n">d_Des_Tp</span><span class="p">,</span><span class="w"> </span><span class="n">Unit_Nm</span><span class="p">,</span><span class="w"> </span><span class="n">State_Nm</span><span class="p">,</span><span class="w"> </span><span class="n">d_State_Nm</span><span class="p">,</span><span class="w"> </span><span class="n">GIS_Acres</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span></code></pre></figure>

<p><code>select()</code> lets me choose the columns I want to keep by name, rather than by index number. I want to reduce PAD-US data size and get rid of any information I don’t need for my map. You’ll need to inspect the data and look at the documentation if you want to use different columns.</p>

<p>I wanted the land designation type (state park, wilderness, etc) in the <code>d_Des_Type</code> column. The Park Name (<code>Unit_Name</code>), state abbreviation (<code>State_Nm</code>), long form of the state name (<code>d_State_Nm</code>), and size of the park (<code>GIS</code>).</p>

<div class="boxed">
<i class="fa-regular fa-note-sticky fa-xl"></i> <i>Note:</i> R will automatically keep the geometry column. In the PAD-US data it's the <code>SHAPE</code> column. To drop the geometry, use <code>st_drop_geometry()</code></div>

<center><i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i></center>

<ul>
  <li>line 12-15</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">12</span><span class="w">     </span><span class="n">mutate</span><span class="p">(</span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">case_when</span><span class="p">(</span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Recreation Management Area"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"State Preserve, Reserve, or Recreation Area"</span><span class="p">,</span><span class="w"> 
</span><span class="m">13</span><span class="w">                            </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Historic or Cultural Area"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"State Historic or Cultural Area"</span><span class="p">,</span><span class="w"> 
</span><span class="m">14</span><span class="w">                            </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Park"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"State Park"</span><span class="p">,</span><span class="w">
</span><span class="m">15</span><span class="w">                            </span><span class="n">d_Des_Tp</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"State Wilderness"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"State Wilderness"</span><span class="p">))</span></code></pre></figure>

<p><code>mutate()</code> is part of the tidyverse package and it’s extremely versatile. It is mainly used to create new variables or modify existing ones.</p>

<p>I wanted the state park designations to match closely with the types I used in the National Park data.</p>

<p>I went over the logic of using <code>mutate()</code> and <code>case_when()</code> in Part III of this series, so I won’t cover it again here.</p>

<p>In its general form, the format is <code>case_when(COLUMN_NAME == "original_value" ~ "new_value")</code>. I only needed to change the values for <code>"Recreation Management Area</code>s, the rest I just populated the new column with the old values.</p>

<center><i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i></center>

<ul>
  <li>lines 16-17</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">16</span><span class="w">  </span><span class="n">mutate</span><span class="p">(</span><span class="n">visited</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">case_when</span><span class="p">(</span><span class="n">Unit_Nm</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Valley of Fire State Park"</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"visited"</span><span class="p">,</span><span class="w">
</span><span class="m">17</span><span class="w">                             </span><span class="kc">TRUE</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"not visited"</span><span class="p">))</span><span class="w">  </span><span class="o">%&gt;%</span><span class="w"> </span></code></pre></figure>

<p>Here is where I ran into some issues. In <a href="http://localhost:4000/notes/cartography-part-three" target="_blank" rel="noopener noreferrer">part III</a> of the series when I processed the National Park data I included a <code>mutate()</code> and <code>case_when()</code> call to mark whether I’ve visited the park or not. It’s not a very elegant solution since I have to modify each park individually, but it was passable since I’ve only been to a handful of National Parks.</p>

<p>For the state parks, though, it is unwieldy. Even in its reduced size the PAD-US data has over 5,000 parks. It would be cumbersome to sort through all 5,000 parks and individually code “visited” or “not visited.”</p>

<p>I had original wanted to drop the geometry and download the parks as a CSV, but even that was a lot.</p>

<div class="boxed">
<i class="fa-regular fa-note-sticky fa-xl"></i> <i>Note:</i> The code to drop the geometry and save some of the park data as csv can be found in the r files on <a href="https://github.com/liz-muehlmann/nps">this project's repo</a></div>

<p>Instead, I am going to focus on the parks I know I’ve visited <em>and</em> have photos at. I’ve visited many, many state parks, but until I have the photos to add to the markers (<a href="http://localhost:4000/notes/cartography-part-five" target="_blank" rel="noopener noreferrer">covered in part five</a>), I’m omitting them from this code. Hopefully in the mean time I’ll figure out a better way to keep track of the parks I’ve been to.</p>

<p>In line 16, I create the <code>visited<code> column using the tidyverse's <code>mutate()</code> function. I populate the column using <code>case_when()</code> which looks in the <code>Unit_Nm</code> column for the park named <code>Valley of Fire State Park</code>. Once found, it puts *visited* in the <code>visited</code> column.</code></code></p>

<p>Line 17 operates in the same way as an <code>else</code> statement. It enters <em>not visited</em> into the <code>visited</code> column for every park not specifically listed using <code>case_when()</code>.</p>

<center><i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i> <i class="fa-solid fa-paw"></i></center>

<ul>
  <li>lines 18-21</li>
</ul>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="m">18</span><span class="w">      </span><span class="n">shift_geometry</span><span class="p">(</span><span class="n">preserve_area</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="c1"># resizes alaska to fit with the size of the other states</span><span class="w">
</span><span class="m">19</span><span class="w">                     </span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"below"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># moves alaska so it's near hawaii</span><span class="w">
</span><span class="m">20</span><span class="w">      </span><span class="n">sf</span><span class="o">::</span><span class="n">st_transform</span><span class="p">(</span><span class="s2">"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"</span><span class="p">)</span><span class="w"> </span><span class="c1"># changes the geographic data from NAD83 to WGS84 </span><span class="w">
</span><span class="m">21</span><span class="w">      </span><span class="n">st_write</span><span class="p">(</span><span class="n">state_parks</span><span class="p">,</span><span class="w"> </span><span class="s2">"./Documents/GitHub/nps/shapefiles/shifted/states/state_parks.shp"</span><span class="p">)</span></code></pre></figure>

<p>I’ve covered these lines extensively in <a href="http://localhost:4000/notes/cartography-part-two" target="_blank" rel="noopener noreferrer">part II</a> and <a href="http://localhost:4000/notes/cartography-part-three" target="_blank" rel="noopener noreferrer">part III</a> of this series.</p>

<p>Lines 18-19 shift the state park data from Alaska and Hawaii so it appears under the continental US and of comparable size.</p>

<p>Line 20 is required to change the coordinate system from Albers to WGS84 - the latter of which is required by Leaflet.</p>

<p>Line 21 saves the shifted shapefile to the hard drive.</p>

<h3 id="6-add-state-parks-to-the-map">6. add state parks to the map</h3>
<hr />

:ET